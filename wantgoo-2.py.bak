import sys
import time

sys.path.append(r"C:\Users\user\Desktop\autoUpdateETF-master\venv\Lib\site-packages")
from bs4 import BeautifulSoup
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from webdriver_manager.chrome import ChromeDriverManager


# 讀取 Google Sheets 中的 ETF 代碼
def get_etf_codes(sheet_id, range_name):
    credentials = Credentials.from_service_account_file(
        "spry-cat-442903-a3-91abd63953b6.json"
    )
    service = build("sheets", "v4", credentials=credentials)
    sheet = service.spreadsheets()

    result = sheet.values().get(spreadsheetId=sheet_id, range=range_name).execute()
    values = result.get("values", [])

    # 回傳 ETF 代碼列表
    return [row[0] for row in values]  # 假設代碼在每行的第一列


# 使用 Selenium 爬取所有 ETF 的年報酬率
def fetch_all_etf_returns(etf_codes):
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
    annual_returns = []

    try:
        driver.get("http://127.0.0.1:8000/page.html")
        for etf_code in etf_codes:
            try:
                # 找到 ETF 代碼元素
                xpath_code = xpath_code = f"//a[normalize-space(text())='{etf_code}']"

                WebDriverWait(driver, 2).until(
                    EC.presence_of_element_located((By.XPATH, xpath_code))
                )

                # 定位年報酬率欄位
                xpath_return = f"{xpath_code}/../../td[10]"
                annual_return_element = driver.find_element(By.XPATH, xpath_return)
                annual_returns.append(annual_return_element.text.strip())
                print(
                    f"ETF Code: {etf_code}, Annual Return: {annual_return_element.text.strip()}"
                )
            except Exception as e:
                print(f"Error fetching data for {etf_code}: {e}")
                annual_returns.append("N/A")
    finally:
        driver.quit()

    return annual_returns


# 使用 BeautifulSoup 從本地 HTML 提取年報酬率
def fetch_all_etf_returns_bs(local_html_path, etf_codes):
    with open(local_html_path, "r", encoding="utf-8") as file:
        soup = BeautifulSoup(file, "html.parser")

    annual_returns = []
    for etf_code in etf_codes:
        try:
            etf_element = soup.find("a", text=etf_code)
            if etf_element:
                annual_return_element = etf_element.find_parent("tr").find_all("td")[9]
                annual_returns.append(annual_return_element.text.strip())
                print(
                    f"ETF Code: {etf_code}, Annual Return: {annual_return_element.text.strip()}"
                )
            else:
                annual_returns.append("N/A")
        except Exception as e:
            print(f"Error fetching data for {etf_code}: {e}")
            annual_returns.append("N/A")

    return annual_returns


# 更新 Google Sheets 中的年報酬率資料
def update_google_sheet(sheet_id, range_name, values):
    credentials = Credentials.from_service_account_file(
        "spry-cat-442903-a3-91abd63953b6.json"
    )
    service = build("sheets", "v4", credentials=credentials)
    sheet = service.spreadsheets()

    body = {"values": [[value] for value in values]}  # 資料格式化成 2D 陣列

    result = (
        sheet.values()
        .update(
            spreadsheetId=sheet_id, range=range_name, body=body, valueInputOption="RAW"
        )
        .execute()
    )
    print(f"Updated {result.get('updatedCells')} cells.")


# 處理整個 ETF 資料抓取和更新流程
def process_etf_data():
    sheet_id = "1ouX_BHS9g3HQBgyo73T2uc37SdAZ0diR1LgHn6YAWwM"
    read_range = "ETF分析!C5:C34"  # 讀取 ETF 代碼的範圍
    write_range = "ETF分析!H5:H34"  # 寫入年報酬率的範圍

    # 讀取 Google Sheets 的 ETF 代碼
    etf_codes = get_etf_codes(sheet_id, read_range)
    print(f"Found ETF codes: {etf_codes}")

    # 爬取年報酬率（選擇 Selenium 或 BeautifulSoup 方法）
    # 使用 Selenium
    annual_returns = fetch_all_etf_returns(etf_codes)

    # 或使用 BeautifulSoup（本地 HTML 方法）
    # annual_returns = fetch_all_etf_returns_bs("path/to/local/page.html", etf_codes)

    # 更新 Google Sheets
    update_google_sheet(sheet_id, write_range, annual_returns)
    print("Google Sheets updated successfully!")


# 呼叫處理函數
if __name__ == "__main__":
    process_etf_data()
